// Generated by Dagger (https://dagger.dev).
package com.androidmvi.spacex.ui.viewmodel;

import com.androidmvi.spacex.network.usecase.RocketDetailsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RocketDetailsViewModel_Factory implements Factory<RocketDetailsViewModel> {
  private final Provider<RocketDetailsUseCase> rocketDetailsUseCaseProvider;

  public RocketDetailsViewModel_Factory(
      Provider<RocketDetailsUseCase> rocketDetailsUseCaseProvider) {
    this.rocketDetailsUseCaseProvider = rocketDetailsUseCaseProvider;
  }

  @Override
  public RocketDetailsViewModel get() {
    return newInstance(rocketDetailsUseCaseProvider.get());
  }

  public static RocketDetailsViewModel_Factory create(
      Provider<RocketDetailsUseCase> rocketDetailsUseCaseProvider) {
    return new RocketDetailsViewModel_Factory(rocketDetailsUseCaseProvider);
  }

  public static RocketDetailsViewModel newInstance(RocketDetailsUseCase rocketDetailsUseCase) {
    return new RocketDetailsViewModel(rocketDetailsUseCase);
  }
}
