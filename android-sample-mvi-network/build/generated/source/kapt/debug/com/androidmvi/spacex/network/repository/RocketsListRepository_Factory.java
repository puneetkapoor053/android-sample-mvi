// Generated by Dagger (https://dagger.dev).
package com.androidmvi.spacex.network.repository;

import com.androidmvi.spacex.network.usecase.RocketListUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RocketsListRepository_Factory implements Factory<RocketsListRepository> {
  private final Provider<RocketListUseCase> rocketListUseCaseProvider;

  public RocketsListRepository_Factory(Provider<RocketListUseCase> rocketListUseCaseProvider) {
    this.rocketListUseCaseProvider = rocketListUseCaseProvider;
  }

  @Override
  public RocketsListRepository get() {
    return newInstance(rocketListUseCaseProvider.get());
  }

  public static RocketsListRepository_Factory create(
      Provider<RocketListUseCase> rocketListUseCaseProvider) {
    return new RocketsListRepository_Factory(rocketListUseCaseProvider);
  }

  public static RocketsListRepository newInstance(RocketListUseCase rocketListUseCase) {
    return new RocketsListRepository(rocketListUseCase);
  }
}
