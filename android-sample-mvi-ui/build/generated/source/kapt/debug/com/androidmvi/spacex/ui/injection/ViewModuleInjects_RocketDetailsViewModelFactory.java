// Generated by Dagger (https://dagger.dev).
package com.androidmvi.spacex.ui.injection;

import androidx.lifecycle.ViewModel;
import com.androidmvi.spacex.network.usecase.RocketDetailsUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ViewModuleInjects_RocketDetailsViewModelFactory implements Factory<ViewModel> {
  private final Provider<RocketDetailsUseCase> rocketListUseCaseProvider;

  public ViewModuleInjects_RocketDetailsViewModelFactory(
      Provider<RocketDetailsUseCase> rocketListUseCaseProvider) {
    this.rocketListUseCaseProvider = rocketListUseCaseProvider;
  }

  @Override
  public ViewModel get() {
    return rocketDetailsViewModel(rocketListUseCaseProvider.get());
  }

  public static ViewModuleInjects_RocketDetailsViewModelFactory create(
      Provider<RocketDetailsUseCase> rocketListUseCaseProvider) {
    return new ViewModuleInjects_RocketDetailsViewModelFactory(rocketListUseCaseProvider);
  }

  public static ViewModel rocketDetailsViewModel(RocketDetailsUseCase rocketListUseCase) {
    return Preconditions.checkNotNullFromProvides(ViewModuleInjects.INSTANCE.rocketDetailsViewModel(rocketListUseCase));
  }
}
