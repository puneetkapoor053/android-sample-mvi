apply from: '../build-versions.gradle'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion androidTargetSdkVersion
    buildToolsVersion androidBuildToolsVersion
    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    buildFeatures {
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation "junit:junit:${jUnitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoLibraryVersion}"
    testImplementation "io.mockk:mockk:${mockkLibraryVersion}"
    testImplementation "org.assertj:assertj-core:${assertJLibraryVersion}"
    testImplementation "pl.pragmatists:JUnitParams:${junitParamsLibraryVersion}"

    androidTestImplementation "androidx.test:runner:${testRunnerVersion}"
    androidTestImplementation "androidx.test.ext:junit:${jUnitExtVersion}"

    api "com.google.dagger:hilt-android:${hilt_version}"
    kapt "com.google.dagger:hilt-compiler:${hilt_version}"
    kapt "com.google.dagger:hilt-android-compiler:${hilt_version}"

    api "androidx.lifecycle:lifecycle-process:${androidXLifecycle}"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:${androidXLifecycle}"
    api "androidx.lifecycle:lifecycle-runtime:${androidXLifecycle}"
}
