// Generated by Dagger (https://dagger.dev).
package com.androidmvi.network.injection;

import com.androidmvi.spacex.network.api.SpaceXApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_GetSpaceXAPIFactory implements Factory<SpaceXApi> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_GetSpaceXAPIFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SpaceXApi get() {
    return getSpaceXAPI(retrofitProvider.get());
  }

  public static NetworkModule_GetSpaceXAPIFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_GetSpaceXAPIFactory(retrofitProvider);
  }

  public static SpaceXApi getSpaceXAPI(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.getSpaceXAPI(retrofit));
  }
}
