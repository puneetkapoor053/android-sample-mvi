// Generated by Dagger (https://dagger.dev).
package com.androidmvi.spacex.network.usecase;

import com.androidmvi.spacex.network.api.SpaceXApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RocketDetailsUseCase_Factory implements Factory<RocketDetailsUseCase> {
  private final Provider<SpaceXApi> spaceXApiProvider;

  public RocketDetailsUseCase_Factory(Provider<SpaceXApi> spaceXApiProvider) {
    this.spaceXApiProvider = spaceXApiProvider;
  }

  @Override
  public RocketDetailsUseCase get() {
    return newInstance(spaceXApiProvider.get());
  }

  public static RocketDetailsUseCase_Factory create(Provider<SpaceXApi> spaceXApiProvider) {
    return new RocketDetailsUseCase_Factory(spaceXApiProvider);
  }

  public static RocketDetailsUseCase newInstance(SpaceXApi spaceXApi) {
    return new RocketDetailsUseCase(spaceXApi);
  }
}
